!!!
%html
  %head
    %title Competitor Analysis
    %link{:rel => :stylesheet, :type => :"text/css", :href => "/stylesheets/nv.d3.css"}
  %body
    %h3 Competitor Analysis
    %script{src: "http://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"}
    %script{src: "http://cdn.pubnub.com/pubnub.min.js"}
    %script{src: "https://cdn.firebase.com/v0/firebase.js"}
    %script{src: "http://dfdbz2tdq3k01.cloudfront.net/js/2.1.0/ortc.js"}
    %script{src: "https://cdn.goinstant.net/v1/platform.min.js"}
    %script{src: "http://js.pusher.com/2.1/pusher.min.js"}
    %script{src: "../js/d3.js"}
    %script{src: "../js/nv.d3.js"}
    %script{src: "../js/BenchmarkService.js"}
    %script{src: "../js/BenchmarkRunner.js"}
    %script{src: "../js/FirebaseService.js"}
    %script{src: "../js/PubnubService.js"}
    %script{src: "../js/GoInstantService.js"}
    %script{src: "../js/RealtimeCoService.js"}
    %script{src: "../js/PusherService.js"}
    %script{src: "../js/Graph.js"}
    %div#latency

    :javascript
      nv.addGraph(function() {
      var chart = nv.models.lineChart()
                    .margin({left: 100})  //Adjust chart margins to give the x-axis some breathing room.
                    .useInteractiveGuideline(true)  //We want nice looking tooltips and a guideline!
                    .transitionDuration(350)  //how fast do you want the lines to transition?
                    .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
                    .showYAxis(true)        //Show the y-axis
                    .showXAxis(true)        //Show the x-axis
      ;
     
      chart.xAxis     //Chart x-axis settings
          .axisLabel('Date')
          .tickFormat(d3.format(',r'));
     
      chart.yAxis     //Chart y-axis settings
          .axisLabel('Latency (ms)')
          .tickFormat(d3.format('.02f'));
     
      /* Done setting the chart up? Time to render it!*/
      // var myData = sinAndCos();   //You need data...
      var myData = #{@pusher_data_for_d3}
     
      d3.select('#chart svg')    //Select the <svg> element you want to render the chart in.   
          .datum(myData)         //Populate the <svg> element with chart data...
          .call(chart);          //Finally, render the chart!
     
      //Update the chart when window resizes.
      nv.utils.windowResize(function() { chart.update() });
      return chart;
    });

    :css
      #chart svg {
        height: 500px;
      }
    #chart
      %svg

